#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç DNS —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
"""
import subprocess
import requests
import json


def test_dns_resolution():
    """–¢–µ—Å—Ç —Ä–µ–∑–æ–ª–≤–∏–Ω–≥–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞ —á–µ—Ä–µ–∑ –Ω–∞—à DNS"""
    print("üß™ –¢–µ—Å—Ç 1: –†–µ–∑–æ–ª–≤–∏–Ω–≥ test.dns.uzicus.ru —á–µ—Ä–µ–∑ –Ω–∞—à DNS")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ –Ω–∞—à DNS
        result = subprocess.run([
            'nslookup', 'test.dns.uzicus.ru', '185.237.95.211'
        ], capture_output=True, text=True, timeout=10)
        
        if result.returncode == 0 and '185.237.95.211' in result.stdout:
            print("‚úÖ test.dns.uzicus.ru –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–∞—à DNS –≤ 185.237.95.211")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–∑–æ–ª–≤–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ –Ω–∞—à DNS: {result.stdout} {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ–∑–æ–ª–≤–∏–Ω–≥–∞: {e}")
        return False


def test_public_dns_resolution():
    """–¢–µ—Å—Ç —á—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω –ù–ï —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π DNS"""
    print("\nüß™ –¢–µ—Å—Ç 2: test.dns.uzicus.ru –ù–ï –¥–æ–ª–∂–µ–Ω —Ä–µ–∑–æ–ª–≤–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ 8.8.8.8")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π DNS - –¥–æ–ª–∂–Ω–æ —É–ø–∞—Å—Ç—å
        result = subprocess.run([
            'nslookup', 'test.dns.uzicus.ru', '8.8.8.8'
        ], capture_output=True, text=True, timeout=10)
        
        if result.returncode != 0 and ('NXDOMAIN' in result.stderr or 'NXDOMAIN' in result.stdout):
            print("‚úÖ test.dns.uzicus.ru –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ù–ï —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π DNS")
            return True
        elif 'NXDOMAIN' in result.stdout:
            print("‚úÖ test.dns.uzicus.ru –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ù–ï —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π DNS")
            return True
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: –¥–æ–º–µ–Ω —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π DNS: {result.stdout}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—É–±–ª–∏—á–Ω–æ–≥–æ DNS: {e}")
        return False


def test_main_page_loads():
    """–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    print("\nüß™ –¢–µ—Å—Ç 3: –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã DNS –ø—Ä–æ–≤–µ—Ä–∫–∏")
    
    try:
        response = requests.get('https://dns.uzicus.ru/', timeout=10, verify=False)
        
        if response.status_code == 200:
            if 'Baltic DNS' in response.text and 'checkDNS' in response.text:
                print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ DNS")
                return True
            else:
                print("‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –Ω–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: HTTP {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        return False


def test_static_file_via_dns():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ –Ω–∞—à DNS"""
    print("\nüß™ –¢–µ—Å—Ç 4: –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å test.json —á–µ—Ä–µ–∑ –Ω–∞—à DNS (–∫–æ—Å–≤–µ–Ω–Ω–æ)")
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º dig –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –¥–æ–º–µ–Ω —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        result = subprocess.run([
            'dig', '@185.237.95.211', 'test.dns.uzicus.ru', 'A', '+short'
        ], capture_output=True, text=True, timeout=10)
        
        if result.returncode == 0 and '185.237.95.211' in result.stdout:
            print("‚úÖ test.dns.uzicus.ru —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π IP —á–µ—Ä–µ–∑ dig")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ traefik –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è test –¥–æ–º–µ–Ω–∞
            # (–º—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–ø—Ä—è–º—É—é –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ test.dns.uzicus.ru –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DNS)
            print("‚ÑπÔ∏è  –î–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å DNS –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ 185.237.95.211")
            return True
        else:
            print(f"‚ùå dig –Ω–µ —Å–º–æ–≥ —Ä–µ–∑–æ–ª–≤–∏—Ç—å –¥–æ–º–µ–Ω: {result.stdout} {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ dig: {e}")
        return False


def test_services_running():
    """–¢–µ—Å—Ç —á—Ç–æ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"""
    print("\nüß™ –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker —Å–µ—Ä–≤–∏—Å–æ–≤")
    
    try:
        result = subprocess.run([
            'docker', 'compose', 'ps', '--format', 'json'
        ], capture_output=True, text=True, timeout=10, cwd='/root/baltic-dns')
        
        if result.returncode == 0:
            services = []
            for line in result.stdout.strip().split('\n'):
                if line.strip():
                    try:
                        service = json.loads(line)
                        services.append(service)
                    except:
                        pass
            
            running_services = [s for s in services if s.get('State') == 'running']
            
            expected_services = ['admin', 'traefik', 'smartdns', 'sniproxy', 'doh-proxy']
            running_names = [s.get('Service', s.get('Name', '')) for s in running_services]
            
            all_running = all(svc in running_names for svc in expected_services)
            
            if all_running:
                print(f"‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã: {running_names}")
                return True
            else:
                print(f"‚ùå –ù–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã. –û–∂–∏–¥–∞–ª–∏: {expected_services}, –ó–∞–ø—É—â–µ–Ω—ã: {running_names}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ Docker: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Docker —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
        return False


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üß™ Baltic DNS - –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    print("=" * 50)
    
    tests = [
        test_dns_resolution,
        test_public_dns_resolution,
        test_main_page_loads,
        test_static_file_via_dns,
        test_services_running
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        if test():
            passed += 1
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
        print("   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ 185.237.95.211")
        print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ https://dns.uzicus.ru/")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω!'")
        return True
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤.")
        return False


if __name__ == "__main__":
    main()